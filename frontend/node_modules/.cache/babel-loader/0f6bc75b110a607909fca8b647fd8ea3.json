{"remainingRequest":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SSAFY\\webmobile-sub2\\frontend\\src\\views\\PortfolioWrite.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\src\\views\\PortfolioWrite.vue","mtime":1563518254078},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\SSAFY\\\\webmobile-sub2\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport RestService from \"../services/RestService\";\nimport FirebaseService from \"@/services/FirebaseService\";\nimport Image from \"../image.js\";\nexport default {\n  name: \"PortfolioWrite\",\n  components: {},\n  beforeMount: function beforeMount() {\n    this.insertLog();\n  },\n  data: function data() {\n    return {\n      title: \"Image Upload\",\n      dialog: false,\n      imageName: \"\",\n      imageUrl: \"\",\n      imageFile: \"\"\n    };\n  },\n  methods: {\n    pickFile: function pickFile() {\n      this.$refs.image.click();\n    },\n    onFilePicked: function onFilePicked(e) {\n      var _this = this;\n\n      var files = e.target.files;\n\n      if (files[0] !== undefined) {\n        this.imageName = files[0].name;\n\n        if (this.imageName.lastIndexOf(\".\") <= 0) {\n          return;\n        }\n\n        var fr = new FileReader();\n        fr.readAsDataURL(files[0]);\n        fr.addEventListener(\"load\", function () {\n          _this.imageUrl = fr.result;\n          _this.imageFile = files[0];\n        });\n      } else {\n        this.imageName = \"\";\n        this.imageFile = \"\";\n        this.imageUrl = \"\";\n      }\n    },\n    randomPhoto: function () {\n      var _randomPhoto = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var ret;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Image.randomPhoto();\n\n              case 2:\n                ret = _context.sent;\n                this.imageName = ret[0];\n                this.imageUrl = ret[1];\n                this.imageFile = \"Random\";\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function randomPhoto() {\n        return _randomPhoto.apply(this, arguments);\n      }\n\n      return randomPhoto;\n    }(),\n    upload: function () {\n      var _upload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var portTitle, portBody, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.imageFile !== \"Random\")) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.next = 3;\n                return Image.imgupload();\n\n              case 3:\n                this.imageUrl = _context2.sent;\n\n              case 4:\n                portTitle = document.querySelector(\"#title\").value;\n                portBody = document.querySelector(\".CodeMirror-code\").innerText;\n                data = {\n                  user_id: \"ykk2006@naver.com\",\n                  portfolio_title: portTitle,\n                  portfolio_content: portBody,\n                  portfolio_img: this.imageUrl\n                };\n                console.log(data);\n                this.insertPortfolio(data);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function upload() {\n        return _upload.apply(this, arguments);\n      }\n\n      return upload;\n    }(),\n    insertLog: function () {\n      var _insertLog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function insertLog() {\n        return _insertLog.apply(this, arguments);\n      }\n\n      return insertLog;\n    }(),\n    insertPortfolio: function insertPortfolio(data) {\n      RestService.insertPortfolio(data);\n    }\n  }\n};",{"version":3,"sources":["PortfolioWrite.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-container class=\"title-div\">\r\n        <div>\r\n            <p class=\"port-title\">Write New Portfolio</p>\r\n        </div>\r\n        <div>\r\n            <div class=\"markdown\">\r\n                <v-flex>\r\n                    <v-text-field id=\"title\" label=\"title\"></v-text-field>\r\n                </v-flex>\r\n                <markdown-editor></markdown-editor>\r\n            </div>\r\n        </div>\r\n        <v-flex xs12 class=\"text-xs-center text-sm-center text-md-center text-lg-center\">\r\n            <img :src=\"imageUrl\" height=\"150\" v-if=\"imageUrl\" />\r\n            <v-text-field\r\n                label=\"Select Image\"\r\n                @click=\"pickFile\"\r\n                v-model=\"imageName\"\r\n                prepend-icon=\"attach_file\"\r\n                v-if=\"imageUrl\"\r\n            ></v-text-field>\r\n            <v-text-field\r\n                label=\"Select Image\"\r\n                @click=\"pickFile\"\r\n                v-model=\"imageName\"\r\n                prepend-icon=\"attach_file\"\r\n                v-else=\"imageUrl\"\r\n                style=\"margin-top: 150px;\"\r\n            ></v-text-field>\r\n            <input\r\n                id=\"imgup\"\r\n                type=\"file\"\r\n                style=\"display: none;\"\r\n                ref=\"image\"\r\n                accept=\"image/*\"\r\n                @change=\"onFilePicked\"\r\n            />\r\n        </v-flex>\r\n        <v-btn @click=\"upload\">Submit</v-btn>\r\n        <v-btn @click=\"randomPhoto\">Get Random Photo</v-btn>\r\n    <TranslateButton/>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport RestService from \"../services/RestService\";\r\nimport FirebaseService from \"@/services/FirebaseService\";\r\nimport Image from \"../image.js\";\r\n\r\nexport default {\r\n    name: \"PortfolioWrite\",\r\n    components: {\r\n    },\r\n    beforeMount() {\r\n        this.insertLog();\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            title: \"Image Upload\",\r\n            dialog: false,\r\n            imageName: \"\",\r\n            imageUrl: \"\",\r\n            imageFile: \"\",\r\n        };\r\n    },\r\n    methods: {\r\n        pickFile() {\r\n            this.$refs.image.click();\r\n        },\r\n        onFilePicked(e) {\r\n            const files = e.target.files;\r\n            if (files[0] !== undefined) {\r\n                this.imageName = files[0].name;\r\n                if (this.imageName.lastIndexOf(\".\") <= 0) {\r\n                    return;\r\n                }\r\n                const fr = new FileReader();\r\n                fr.readAsDataURL(files[0]);\r\n                fr.addEventListener(\"load\", () => {\r\n                    this.imageUrl = fr.result;\r\n                    this.imageFile = files[0];\r\n                });\r\n            } else {\r\n                this.imageName = \"\";\r\n                this.imageFile = \"\";\r\n                this.imageUrl = \"\";\r\n            }\r\n        },\r\n        async randomPhoto() {\r\n            const ret = await Image.randomPhoto();\r\n            this.imageName = ret[0];\r\n            this.imageUrl = ret[1];\r\n            this.imageFile = \"Random\";\r\n        },\r\n        async upload() {\r\n            if (this.imageFile !== \"Random\") {\r\n                this.imageUrl = await Image.imgupload();\r\n            }\r\n\r\n            const portTitle = document.querySelector(\"#title\").value;\r\n            const portBody = document.querySelector(\".CodeMirror-code\")\r\n                .innerText;\r\n\r\n            const data = {\r\n                user_id: \"ykk2006@naver.com\",\r\n                portfolio_title: portTitle,\r\n                portfolio_content: portBody,\r\n                portfolio_img: this.imageUrl\r\n            };\r\n\r\n            console.log(data);\r\n            this.insertPortfolio(data);\r\n        },\r\n\r\n        async insertLog() {\r\n            // this.insertLog = await RestService.insertLog(\"PortfolioWrite\");\r\n        },\r\n\r\n        insertPortfolio(data) {\r\n            RestService.insertPortfolio(data);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n.port-title {\r\n    font-size: 5vw;\r\n}\r\n\r\n.title-div {\r\n    margin-top: 50px;\r\n}\r\n\r\n.CodeMirror-line {\r\n    text-align: left;\r\n} \r\n.editor-preview{\r\n    text-align: left;\r\n}\r\n\r\n\r\n.none {\r\n    display: none;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}