{"remainingRequest":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SSAFY\\webmobile-sub2\\frontend\\src\\components\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\src\\components\\Register.vue","mtime":1563869554881},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\SSAFY\\\\webmobile-sub2\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport RestService from \"../services/RestService\";\nexport default {\n  data: function data() {\n    return {\n      dialog: false,\n      user: {\n        user_id: \"\",\n        user_pw: \"\",\n        user_name: \"\",\n        user_grade: \"방문자\"\n      },\n      check: [{\n        cnt: \"\"\n      }],\n      err_stat: {\n        status: \"\",\n        code: \"\"\n      }\n    };\n  },\n  methods: {\n    check_user: function () {\n      var _check_user = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.check_null()) {\n                  _context.next = 19;\n                  break;\n                }\n\n                if (!this.check_email()) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 4;\n                return RestService.getUser(this.user.user_id);\n\n              case 4:\n                this.check = _context.sent;\n\n                if (!(this.check[0].cnt == 0)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 8;\n                return RestService.insertUser(this.user);\n\n              case 8:\n                this.err_stat = _context.sent;\n\n                if (this.err_stat.status == 1) {\n                  alert(\"가입 성공!\");\n                } else {\n                  alert(this.err_stat.code);\n                }\n\n                _context.next = 13;\n                break;\n\n              case 12:\n                alert(\"중복된 Email입니다.\");\n\n              case 13:\n                this.clear_user();\n                _context.next = 17;\n                break;\n\n              case 16:\n                alert(\"ID를 Email형식으로 입력해주세요\");\n\n              case 17:\n                _context.next = 20;\n                break;\n\n              case 19:\n                alert(\"입력된 데이터에 공백값이 포함되어 있습니다.\");\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function check_user() {\n        return _check_user.apply(this, arguments);\n      }\n\n      return check_user;\n    }(),\n    clear_user: function clear_user() {\n      this.user.user_id = \"\";\n      this.user.user_pw = \"\";\n      this.user.user_name = \"\";\n      this.user.user_pw = \"\";\n    },\n    check_email: function check_email() {\n      var regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n\n      if (this.user.user_id.match(regExp) != null) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    check_null: function check_null() {\n      if (this.user.user_id == \"\" || this.user.user_pw == \"\" || this.user.user_name == \"\") return false;\n      return true;\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,WAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,OAAA,EAAA,EAFA;AAGA,QAAA,SAAA,EAAA,EAHA;AAIA,QAAA,UAAA,EAAA;AAJA,OAFA;AAQA,MAAA,KAAA,EAAA,CAAA;AACA,QAAA,GAAA,EAAA;AADA,OAAA,CARA;AAWA,MAAA,QAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA;AAFA;AAXA,KAAA;AAgBA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,KAAA,UAAA,EAFA;AAAA;AAAA;AAAA;;AAAA,qBAGA,KAAA,WAAA,EAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIA,WAAA,CAAA,OAAA,CAAA,KAAA,IAAA,CAAA,OAAA,CAJA;;AAAA;AAIA,qBAAA,KAJA;;AAAA,sBAKA,KAAA,KAAA,CAAA,CAAA,EAAA,GAAA,IAAA,CALA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMA,WAAA,CAAA,UAAA,CAAA,KAAA,IAAA,CANA;;AAAA;AAMA,qBAAA,QANA;;AAOA,oBAAA,KAAA,QAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,kBAAA,KAAA,CAAA,QAAA,CAAA;AACA,iBAFA,MAEA;AACA,kBAAA,KAAA,CAAA,KAAA,QAAA,CAAA,IAAA,CAAA;AACA;;AAXA;AAAA;;AAAA;AAaA,gBAAA,KAAA,CAAA,eAAA,CAAA;;AAbA;AAeA,qBAAA,UAAA;AAfA;AAAA;;AAAA;AAiBA,gBAAA,KAAA,CAAA,sBAAA,CAAA;;AAjBA;AAAA;AAAA;;AAAA;AAoBA,gBAAA,KAAA,CAAA,0BAAA,CAAA;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuBA,IAAA,UAvBA,wBAuBA;AACA,WAAA,IAAA,CAAA,OAAA,GAAA,EAAA;AACA,WAAA,IAAA,CAAA,OAAA,GAAA,EAAA;AACA,WAAA,IAAA,CAAA,SAAA,GAAA,EAAA;AACA,WAAA,IAAA,CAAA,OAAA,GAAA,EAAA;AACA,KA5BA;AA6BA,IAAA,WA7BA,yBA6BA;AACA,UAAA,MAAA,GAAA,kFAAA;;AACA,UAAA,KAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,eAAA,IAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA;AACA;AACA,KApCA;AAqCA,IAAA,UArCA,wBAqCA;AACA,UACA,KAAA,IAAA,CAAA,OAAA,IAAA,EAAA,IACA,KAAA,IAAA,CAAA,OAAA,IAAA,EADA,IAEA,KAAA,IAAA,CAAA,SAAA,IAAA,EAHA,EAKA,OAAA,KAAA;AACA,aAAA,IAAA;AACA;AA7CA;AAnBA,CAAA","sourcesContent":["<template>\r\n<v-layout row justify-center>\r\n  <v-dialog v-model=\"dialog\" max-width=\"600px\">\r\n    <template v-slot:activator=\"{ on }\">\r\n      <v-btn class=\"headerButton\" icon v-on=\"on\">\r\n        <v-icon color=\"white\">person_add</v-icon>\r\n      </v-btn>\r\n      <v-btn class=\"sidebarButton\" flat v-on=\"on\" style=\"width: 160px; left: 0px; height: 48px; z-index: 2;\" fixed>\r\n        <v-icon style=\"margin-right: auto; margin-left: 17px;\">person_add</v-icon>\r\n      </v-btn>\r\n    </template>\r\n\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">Register</span>\r\n      </v-card-title>\r\n      <v-card-text>\r\n        <v-container grid-list-md>\r\n          <v-layout wrap>\r\n            <v-flex xs12 sm6 md4>\r\n              <v-text-field v-model=\"user.user_name\" label=\"Full name*\" required></v-text-field>\r\n            </v-flex>\r\n            <v-flex xs12>\r\n              <v-text-field v-model=\"user.user_id\" label=\"ID*\" required></v-text-field>\r\n            </v-flex>\r\n            <v-flex xs12>\r\n              <v-text-field v-model=\"user.user_pw\" label=\"Password*\" type=\"password\" required></v-text-field>\r\n            </v-flex>\r\n          </v-layout>\r\n        </v-container>\r\n        <small>*indicates required field</small>\r\n      </v-card-text>\r\n      <v-card-actions>\r\n        <v-spacer></v-spacer>\r\n        <v-btn color=\"blue darken-1\" flat @click=\"dialog = false\">Close</v-btn>\r\n        <v-btn color=\"blue darken-1\" flat @click=\"check_user()\">Register</v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</v-layout>\r\n</template>\r\n\r\n<script>\r\nimport RestService from \"../services/RestService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialog: false,\r\n      user: {\r\n        user_id: \"\",\r\n        user_pw: \"\",\r\n        user_name: \"\",\r\n        user_grade: \"방문자\"\r\n      },\r\n      check: [{\r\n        cnt: \"\"\r\n      }],\r\n      err_stat: {\r\n        status: \"\",\r\n        code: \"\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async check_user() {\r\n      if (this.check_null()) {\r\n        if (this.check_email()) {\r\n          this.check = await RestService.getUser(this.user.user_id);\r\n          if (this.check[0].cnt == 0) {\r\n            this.err_stat = await RestService.insertUser(this.user);\r\n            if (this.err_stat.status == 1) {\r\n              alert(\"가입 성공!\");\r\n            } else {\r\n              alert(this.err_stat.code);\r\n            }\r\n          } else {\r\n            alert(\"중복된 Email입니다.\");\r\n          }\r\n          this.clear_user();\r\n        } else {\r\n          alert(\"ID를 Email형식으로 입력해주세요\");\r\n        }\r\n      } else {\r\n        alert(\"입력된 데이터에 공백값이 포함되어 있습니다.\");\r\n      }\r\n    },\r\n    clear_user() {\r\n      this.user.user_id = \"\";\r\n      this.user.user_pw = \"\";\r\n      this.user.user_name = \"\";\r\n      this.user.user_pw = \"\";\r\n    },\r\n    check_email() {\r\n      let regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n      if (this.user.user_id.match(regExp) != null) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    check_null() {\r\n      if (\r\n        this.user.user_id == \"\" ||\r\n        this.user.user_pw == \"\" ||\r\n        this.user.user_name == \"\"\r\n      )\r\n        return false;\r\n      return true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n@media screen and (max-width: 599px) {\r\n  .headerButton {\r\n    display: none;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 600px) {\r\n  .sidebarButton {\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}