{"remainingRequest":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SSAFY\\webmobile-sub2\\frontend\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\src\\components\\Login.vue","mtime":1563518254071},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\SSAFY\\\\webmobile-sub2\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FirebaseService from \"@/services/FirebaseService\";\nimport { VFBLogin as VFacebookLogin } from \"vue-facebook-login-component\";\nimport RestService from \"@/services/RestService\";\nexport default {\n  data: function data() {\n    return {\n      dialog: false,\n      id: \"\",\n      password: \"\",\n      check: [{\n        cnt: \"\"\n      }],\n      token: {\n        token: \"\",\n        refresh: \"\"\n      }\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.insertLog();\n  },\n  components: {\n    VFacebookLogin: VFacebookLogin\n  },\n  methods: {\n    loginWithGoogle: function () {\n      var _loginWithGoogle = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return FirebaseService.loginWithGoogle();\n\n              case 2:\n                result = _context.sent;\n                this.$store.state.accessToken = result.credential.accessToken;\n                this.$store.state.user = result.user;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loginWithGoogle() {\n        return _loginWithGoogle.apply(this, arguments);\n      }\n\n      return loginWithGoogle;\n    }(),\n    loginWithFacebook: function () {\n      var _loginWithFacebook = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return FirebaseService.loginWithFacebook();\n\n              case 2:\n                result = _context2.sent;\n                this.$store.state.accessToken = result.credential.accessToken;\n                this.$store.state.user = result.user;\n\n                if (this.$store.state.accessToken != '' && this.$store.state.user != '') {\n                  this.$session.set('email', this.$store.state.user.email);\n                }\n\n                this.$emit('update:loginvisible', !this.loginvisible);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loginWithFacebook() {\n        return _loginWithFacebook.apply(this, arguments);\n      }\n\n      return loginWithFacebook;\n    }(),\n    insertLog: function () {\n      var _insertLog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return RestService.insertLog(\"LoginPage\");\n\n              case 2:\n                this.insertLog = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function insertLog() {\n        return _insertLog.apply(this, arguments);\n      }\n\n      return insertLog;\n    }(),\n    defaultLogin: function () {\n      var _defaultLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return RestService.getUser(this.id);\n\n              case 2:\n                this.check = _context4.sent;\n\n                if (!(this.check[0].cnt == 0)) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                alert(\"ID가 존재하지 않습니다.\");\n                _context4.next = 11;\n                break;\n\n              case 7:\n                _context4.next = 9;\n                return RestService.loginUser(this.id, this.password);\n\n              case 9:\n                this.token = _context4.sent;\n\n                if (this.token.token == null) {\n                  alert(\"비밀번호를 확인해주세요.\");\n                } else {\n                  alert(\"로그인 성공!\");\n                  this.dialog = false;\n                  this.clear_user();\n                }\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function defaultLogin() {\n        return _defaultLogin.apply(this, arguments);\n      }\n\n      return defaultLogin;\n    }(),\n    clear_user: function clear_user() {\n      this.id = \"\";\n      this.password = \"\";\n    }\n  },\n  mounted: function mounted() {//console.log(this.$store.state);\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-layout>\r\n        <v-dialog v-model=\"dialog\" max-width=\"500\">\r\n            <template v-slot:activator=\"{ on }\">\r\n                <v-btn class=\"headerButton\" icon v-on=\"on\">\r\n                        <v-icon color=\"white\">perm_identity</v-icon>\r\n                </v-btn>\r\n                <v-btn class=\"sidebarButton\" flat v-on=\"on\" style=\"width: 160px; left: 0px; height: 48px; z-index: 2;\" fixed>\r\n                    <v-icon style=\"margin-right: auto; margin-left: 17px;\">perm_identity</v-icon>\r\n                </v-btn>\r\n            </template>\r\n\r\n            <v-card>\r\n                <v-card-title class=\"headline\">Login</v-card-title>\r\n                <div class=\"form\">\r\n                    <v-text-field v-model=\"id\" label=\"ID*\" required></v-text-field>\r\n                    <v-text-field v-model=\"password\" label=\"Password*\" required></v-text-field>\r\n                </div>\r\n                <small>*indicates required field</small>\r\n\r\n                <v-btn round color=\"#df4a31\" dark v-on:click=\"loginWithGoogle\" style=\"width:80%;\">\r\n                    <v-icon size=\"25\" class=\"mr-2\">fa-google</v-icon>Google 로그인\r\n                </v-btn>\r\n                <br />\r\n                <v-btn color=\"blue\" v-on:click=\"loginWithFacebook\" style=\"width:80%;\" dark round>\r\n                <v-icon size=\"25\" class=\"mr-2\">fa-facebook</v-icon>\r\n                Facebook 로그인\r\n                </v-btn>\r\n\r\n\r\n\r\n                <br />\r\n\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn color=\"primary\" dark @click=\"defaultLogin()\">Login</v-btn>\r\n                    <v-btn color=\"green darken-1\" flat @click>Forgot password?</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </v-layout>\r\n</template>\r\n\r\n<script>\r\nimport FirebaseService from \"@/services/FirebaseService\";\r\nimport { VFBLogin as VFacebookLogin } from \"vue-facebook-login-component\";\r\nimport RestService from \"@/services/RestService\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            dialog: false,\r\n            id: \"\",\r\n            password: \"\",\r\n            check: [\r\n                {\r\n                    cnt: \"\"\r\n                }\r\n            ],\r\n            token: {\r\n                token: \"\",\r\n                refresh: \"\"\r\n            }\r\n        };\r\n    },\r\n    beforeMount() {\r\n        this.insertLog();\r\n    },\r\n    components: {\r\n        VFacebookLogin\r\n    },\r\n    methods: {\r\n        async loginWithGoogle() {\r\n            const result = await FirebaseService.loginWithGoogle();\r\n            this.$store.state.accessToken = result.credential.accessToken;\r\n            this.$store.state.user = result.user;\r\n        },\r\n        async loginWithFacebook() {\r\n        const result = await FirebaseService.loginWithFacebook();\r\n        this.$store.state.accessToken = result.credential.accessToken;\r\n        this.$store.state.user = result.user;\r\n        if(this.$store.state.accessToken != '' && this.$store.state.user != '') {\r\n         this.$session.set('email', this.$store.state.user.email);\r\n      }\r\n      this.$emit('update:loginvisible', !this.loginvisible);\r\n      },\r\n        async insertLog() {\r\n            this.insertLog = await RestService.insertLog(\"LoginPage\");\r\n        },\r\n        async defaultLogin() {\r\n            this.check = await RestService.getUser(this.id);\r\n            if (this.check[0].cnt == 0) {\r\n                alert(\"ID가 존재하지 않습니다.\");\r\n            } else {\r\n                this.token = await RestService.loginUser(\r\n                    this.id,\r\n                    this.password\r\n                );\r\n                if (this.token.token == null) {\r\n                    alert(\"비밀번호를 확인해주세요.\");\r\n                } else {\r\n                    alert(\"로그인 성공!\");\r\n                    this.dialog = false;\r\n                    this.clear_user();\r\n                }\r\n            }\r\n        },\r\n        clear_user() {\r\n            this.id = \"\";\r\n            this.password = \"\";\r\n        },\r\n    },\r\n    mounted() {\r\n        //console.log(this.$store.state);\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.headline {\r\n    padding-bottom: 50px;\r\n}\r\n\r\n.modalface {\r\n    padding-left: 10%;\r\n    padding-right: 11%;\r\n    width: 100%;\r\n}\r\n\r\n.form {\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n}\r\n\r\n@media screen and (max-width: 599px) {\r\n    .headerButton {\r\n        display: none;\r\n    }\r\n}\r\n\r\n@media screen and (min-width: 600px) {\r\n    .sidebarButton {\r\n        display: none;\r\n    }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}