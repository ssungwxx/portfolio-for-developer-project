{"remainingRequest":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SSAFY\\webmobile-sub2\\frontend\\src\\components\\RepositoryList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\src\\components\\RepositoryList.vue","mtime":1563427041703},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563870748243},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1563870747768},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1563870756719},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563870748243},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1563870756570}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\SSAFY\\\\webmobile-sub2\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Repository from '@/components/Repository';\nimport GitlabService from '@/services/GitlabService';\nexport default {\n  name: 'RepositoryList',\n  data: function data() {\n    return {\n      members: []\n    };\n  },\n  components: {\n    Repository: Repository\n  },\n  mounted: function mounted() {\n    this.getMembers();\n  },\n  methods: {\n    getMembers: function () {\n      var _getMembers = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return GitlabService.getRepomemebers();\n\n              case 2:\n                response = _context.sent;\n\n                if (!(response.status !== 200)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 5:\n                this.members = response.data;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getMembers() {\n        return _getMembers.apply(this, arguments);\n      }\n\n      return getMembers;\n    }()\n  }\n};",{"version":3,"sources":["RepositoryList.vue"],"names":[],"mappings":";;;;;;;;;;;;AAWA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,aAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAPA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,UAAA;AACA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,aAAA,CAAA,eAAA,EAFA;;AAAA;AAEA,gBAAA,QAFA;;AAAA,sBAGA,QAAA,CAAA,MAAA,KAAA,GAHA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAMA,qBAAA,OAAA,GAAA,QAAA,CAAA,IAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAbA,CAAA","sourcesContent":["<template>\r\n    <v-layout column px-4>\r\n        <v-flex v-for=\"i in 5\" v-if=\"members[i-1]!==undefined\">\r\n            <v-divider v-if=\"i === 1\"></v-divider>\r\n            <Repository :member=\"members[i - 1]\"></Repository>\r\n            <v-divider></v-divider>\r\n        </v-flex>\r\n    </v-layout>\r\n</template>\r\n\r\n<script>\r\n    import Repository from '@/components/Repository'\r\n    import GitlabService from '@/services/GitlabService'\r\n\r\n    export default {\r\n        name: 'RepositoryList',\r\n        data() {\r\n            return {\r\n                members: []\r\n            }\r\n        },\r\n        components: {\r\n            Repository,\r\n        },\r\n        mounted() {\r\n            this.getMembers()\r\n        },\r\n        methods: {\r\n            async getMembers() {\r\n                const response = await GitlabService.getRepomemebers()\r\n                if (response.status !== 200) {\r\n                    return\r\n                }\r\n                this.members = response.data\r\n            },\r\n        }\r\n    }\r\n</script>\r\n"],"sourceRoot":"src/components"}]}