{"remainingRequest":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SSAFY\\webmobile-sub2\\frontend\\src\\components\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\src\\components\\Register.vue","mtime":1563355718520},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport RestService from \"../services/RestService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialog: false,\r\n      user: {\r\n        user_id: \"\",\r\n        user_pw: \"\",\r\n        user_name: \"\"\r\n      },\r\n      check: [\r\n        {\r\n          cnt: \"\"\r\n        }\r\n      ],\r\n      err_stat: {\r\n        status: \"\",\r\n        code: \"\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async check_user() {\r\n      if (this.check_null()) {\r\n        if (this.check_email()) {\r\n          this.check = await RestService.getUser(this.user.user_id);\r\n          if (this.check[0].cnt == 0) {\r\n            if (this.err_stat.status == 1) {\r\n              alert(\"가입 성공!\");\r\n            } else {\r\n              alert(this.err_stat.code);\r\n            }\r\n            this.err_stat = await RestService.insertUser(this.user);\r\n          } else {\r\n            alert(\"중복된 Email입니다.\");\r\n          }\r\n          this.clear_user();\r\n        } else {\r\n          alert(\"ID를 Email형식으로 입력해주세요\");\r\n        }\r\n      } else {\r\n        alert(\"입력된 데이터에 공백값이 포함되어 있습니다.\");\r\n      }\r\n    },\r\n    clear_user() {\r\n      this.user.user_id = \"\";\r\n      this.user.user_pw = \"\";\r\n      this.user.user_name = \"\";\r\n      this.user.user_pw = \"\";\r\n    },\r\n    check_email() {\r\n      let regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n      if (this.user.user_id.match(regExp) != null) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    check_null() {\r\n      if (\r\n        this.user.user_id == \"\" ||\r\n        this.user.user_pw == \"\" ||\r\n        this.user.user_name == \"\"\r\n      )\r\n        return false;\r\n      return true;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-layout row justify-center>\r\n    <v-dialog v-model=\"dialog\" max-width=\"600px\">\r\n      <template v-slot:activator=\"{ on }\">\r\n        <v-btn icon v-on=\"on\">\r\n          <v-icon color=\"white\">assignment_ind</v-icon>\r\n        </v-btn>\r\n      </template>\r\n\r\n      <v-card>\r\n        <v-card-title>\r\n          <span class=\"headline\">Register</span>\r\n        </v-card-title>\r\n        <v-card-text>\r\n          <v-container grid-list-md>\r\n            <v-layout wrap>\r\n              <v-flex xs12 sm6 md4>\r\n                <v-text-field v-model=\"user.user_name\" label=\"Full name*\" required></v-text-field>\r\n              </v-flex>\r\n              <v-flex xs12>\r\n                <v-text-field v-model=\"user.user_id\" label=\"ID*\" required></v-text-field>\r\n              </v-flex>\r\n              <v-flex xs12>\r\n                <v-text-field v-model=\"user.user_pw\" label=\"Password*\" type=\"password\" required></v-text-field>\r\n              </v-flex>\r\n            </v-layout>\r\n          </v-container>\r\n          <small>*indicates required field</small>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn color=\"blue darken-1\" flat @click=\"dialog = false\">Close</v-btn>\r\n          <v-btn color=\"blue darken-1\" flat @click=\"check_user()\">Register</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </v-layout>\r\n</template>\r\n\r\n<script>\r\nimport RestService from \"../services/RestService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialog: false,\r\n      user: {\r\n        user_id: \"\",\r\n        user_pw: \"\",\r\n        user_name: \"\"\r\n      },\r\n      check: [\r\n        {\r\n          cnt: \"\"\r\n        }\r\n      ],\r\n      err_stat: {\r\n        status: \"\",\r\n        code: \"\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async check_user() {\r\n      if (this.check_null()) {\r\n        if (this.check_email()) {\r\n          this.check = await RestService.getUser(this.user.user_id);\r\n          if (this.check[0].cnt == 0) {\r\n            if (this.err_stat.status == 1) {\r\n              alert(\"가입 성공!\");\r\n            } else {\r\n              alert(this.err_stat.code);\r\n            }\r\n            this.err_stat = await RestService.insertUser(this.user);\r\n          } else {\r\n            alert(\"중복된 Email입니다.\");\r\n          }\r\n          this.clear_user();\r\n        } else {\r\n          alert(\"ID를 Email형식으로 입력해주세요\");\r\n        }\r\n      } else {\r\n        alert(\"입력된 데이터에 공백값이 포함되어 있습니다.\");\r\n      }\r\n    },\r\n    clear_user() {\r\n      this.user.user_id = \"\";\r\n      this.user.user_pw = \"\";\r\n      this.user.user_name = \"\";\r\n      this.user.user_pw = \"\";\r\n    },\r\n    check_email() {\r\n      let regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n      if (this.user.user_id.match(regExp) != null) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    check_null() {\r\n      if (\r\n        this.user.user_id == \"\" ||\r\n        this.user.user_pw == \"\" ||\r\n        this.user.user_name == \"\"\r\n      )\r\n        return false;\r\n      return true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}