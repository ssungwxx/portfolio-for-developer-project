{"remainingRequest":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SSAFY\\webmobile-sub2\\frontend\\src\\views\\PortfolioWrite.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\src\\views\\PortfolioWrite.vue","mtime":1563407179839},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SSAFY\\webmobile-sub2\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport RestService from \"../services/RestService\"\nimport FirebaseService from '@/services/FirebaseService'\nimport Image from \"../image.js\"\n\nexport default {\n    name: \"PortfolioWrite\",\n    components: {},\n    beforeMount() {\n        this.insertLog();\n    },\n\n    data() {\n        return {\n            title: \"Image Upload\",\n            dialog: false,\n            imageName: '',\n            imageUrl: '',\n            imageFile: '',\n        }\n    },\n    methods: {\n        pickFile() {\n            this.$refs.image.click();\n        },\n        onFilePicked(e) {\n            const files = e.target.files;\n            if (files[0] !== undefined) {\n                this.imageName = files[0].name\n                if (this.imageName.lastIndexOf('.') <= 0) {\n                    return\n                }\n                const fr = new FileReader()\n                fr.readAsDataURL(files[0])\n                fr.addEventListener('load', () => {\n                    this.imageUrl = fr.result;\n                    this.imageFile = files[0] // this is an image file that can be sent to server...\n                })\n            } else if (this.imageUrl !== \"\") {\n                this.imageName = \"Random_Image\";\n                const fr = new FileReader();\n                fr.readAsDataURL(this.imageUrl);\n                fr.addEventListener(\"load\", () => {\n                    this.imageFile = this.imageUrl;\n                });\n            } else {\n                this.imageName = '';\n                this.imageFile = '';\n                this.imageUrl = '';\n            }\n        },\n        async randomPhoto() {\n            const ret = await Image.randomPhoto();\n            this.imageName = ret[0];\n            this.imageUrl = ret[1];\n        },\n        async upload() {\n            this.imageUrl = await Image.imgupload();\n            const portTitle = document.querySelector(\"#title\").value;\n            const portBody = document.querySelector(\".editor-preview.editor-preview-active\").innerText;\n\n            const data = {\n                portfolio_title: portTitle,\n                portfolio_subTitle: portBody,\n                portfolio_img: this.imageUrl\n            };\n            console.log(data);\n            // this.insertPortfolio(data);\n        },\n\n        async insertLog() {\n            this.insertLog = await RestService.insertLog('PortfolioWrite');\n        },\n\n        insertPortfolio(data) {\n            RestService.insertPortfolio(data);\n        }\n    }\n};\n",{"version":3,"sources":["PortfolioWrite.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"PortfolioWrite.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <v-container class=\"title-div\">\r\n        <div>\r\n            <p class=\"port-title\">Write New Portfolio</p>\r\n        </div>\r\n        <div>\r\n            <div class=\"markdown\">\r\n                <v-flex>\r\n                    <v-text-field id=\"title\" label=\"title\"></v-text-field>\r\n                </v-flex>\r\n                <markdown-editor></markdown-editor>\r\n            </div>\r\n        </div>\r\n        <v-flex xs12 class=\"text-xs-center text-sm-center text-md-center text-lg-center\">\r\n            <img :src=\"imageUrl\" height=\"150\" v-if=\"imageUrl\"/>\r\n            <v-text-field label=\"Select Image\" @click='pickFile' v-model='imageName'\r\n                          prepend-icon='attach_file' v-if=\"imageUrl\"></v-text-field>\r\n            <v-text-field label=\"Select Image\" @click='pickFile' v-model='imageName'\r\n                          prepend-icon='attach_file' v-else=\"imageUrl\" style=\"margin-top: 150px;\"></v-text-field>\r\n            <input id=\"imgup\"\r\n                   type=\"file\"\r\n                   style=\"display: none;\"\r\n                   ref=\"image\"\r\n                   accept=\"image/*\"\r\n                   @change=\"onFilePicked\"\r\n            >\r\n        </v-flex>\r\n\r\n        <v-btn @click=\"upload\">\r\n            Submit\r\n        </v-btn>\r\n        <v-btn @click=\"randomPhoto\">\r\n            Get Random Photo\r\n        </v-btn>\r\n\r\n\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n    import RestService from \"../services/RestService\"\r\n    import FirebaseService from '@/services/FirebaseService'\r\n    import Image from \"../image.js\"\r\n\r\n    export default {\r\n        name: \"PortfolioWrite\",\r\n        components: {},\r\n        beforeMount() {\r\n            this.insertLog();\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                title: \"Image Upload\",\r\n                dialog: false,\r\n                imageName: '',\r\n                imageUrl: '',\r\n                imageFile: '',\r\n            }\r\n        },\r\n        methods: {\r\n            pickFile() {\r\n                this.$refs.image.click();\r\n            },\r\n            onFilePicked(e) {\r\n                const files = e.target.files;\r\n                if (files[0] !== undefined) {\r\n                    this.imageName = files[0].name\r\n                    if (this.imageName.lastIndexOf('.') <= 0) {\r\n                        return\r\n                    }\r\n                    const fr = new FileReader()\r\n                    fr.readAsDataURL(files[0])\r\n                    fr.addEventListener('load', () => {\r\n                        this.imageUrl = fr.result;\r\n                        this.imageFile = files[0] // this is an image file that can be sent to server...\r\n                    })\r\n                } else if (this.imageUrl !== \"\") {\r\n                    this.imageName = \"Random_Image\";\r\n                    const fr = new FileReader();\r\n                    fr.readAsDataURL(this.imageUrl);\r\n                    fr.addEventListener(\"load\", () => {\r\n                        this.imageFile = this.imageUrl;\r\n                    });\r\n                } else {\r\n                    this.imageName = '';\r\n                    this.imageFile = '';\r\n                    this.imageUrl = '';\r\n                }\r\n            },\r\n            async randomPhoto() {\r\n                const ret = await Image.randomPhoto();\r\n                this.imageName = ret[0];\r\n                this.imageUrl = ret[1];\r\n            },\r\n            async upload() {\r\n                this.imageUrl = await Image.imgupload();\r\n                const portTitle = document.querySelector(\"#title\").value;\r\n                const portBody = document.querySelector(\".editor-preview.editor-preview-active\").innerText;\r\n\r\n                const data = {\r\n                    portfolio_title: portTitle,\r\n                    portfolio_subTitle: portBody,\r\n                    portfolio_img: this.imageUrl\r\n                };\r\n                console.log(data);\r\n                // this.insertPortfolio(data);\r\n            },\r\n\r\n            async insertLog() {\r\n                this.insertLog = await RestService.insertLog('PortfolioWrite');\r\n            },\r\n\r\n            insertPortfolio(data) {\r\n                RestService.insertPortfolio(data);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style>\r\n    .port-title {\r\n        font-size: 5vw;\r\n    }\r\n\r\n    .title-div {\r\n        margin-top: 50px;\r\n    }\r\n\r\n    .CodeMirror-line  {\r\n        text-align: left;\r\n    }\r\n</style>\r\n"]}]}